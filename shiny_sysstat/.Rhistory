data
source('rCharter.R')
source('rCharter.R')
source('rCharter.R')
source('rCharter.R')
source('rCharter.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
ff <- select(fuf,6:8)
source('rCharter.R')
source('rCharter.R')
source('rCharter.R')
source('rCharter.R')
source('rCharter.R')
source('rCharter.R')
source('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
ff <- select(fuf,6:8)
ff
fuf
runApp('rCharter.R')
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
fuf
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
d1
source('~/shiny_projekter/shiny_sysstat/code.R')
install.packages('quantmod')
d1
source('~/shiny_projekter/shiny_sysstat/code.R')
install.packages('directlabels')
source('~/shiny_projekter/shiny_sysstat/code.R')
d1$setTemplate(
afterScript =
'
<script>
//get fewer ticks on x axis
//this is a dimple issue that might or might not get fixed
myChart.svg.select(".axis").selectAll(".tick")[0].forEach(function(d,i){
if (!(+d3.time.format("%m")(new Date(+d3.select(d).datum())) % 3 == 1)) {
d.remove()
} else {
var dtext = d3.select(d).selectAll("text");
dtext
.text(d3.time.format("%b %Y")(new Date(dtext.text())))
.attr("transform","none")
.attr("y",12)
.style("text-anchor","middle");
}
});
//remove x axis label
myChart.axes[0].titleShape.remove()
myChart.svg.append("text")
.attr("id","charttitle")
.attr("x", 0)
.attr("y", 30)
.text("Dow Jones Industrial Average (source: St. Louis Federal Reserve (FRED) )")
.style("text-anchor","beginning")
.style("font-size","16px")
.style("font-family","sans-serif")
</script>
'
)
source('~/shiny_projekter/shiny_sysstat/code.R')
source('~/shiny_projekter/shiny_sysstat/code.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
install.packages('rjson')
runApp('rCharter.R')
runApp('rCharter.R')
runApp('rCharter.R')
install_github('ramnathv/rCharts')
require(devtools)
install_github('ramnathv/rCharts')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
hair_eye_male
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
mtcars
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
source('nvd3igen.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
fuf
as.integer( as.POSIXct( times ) , tz = "BST" )
as.integer( as.POSIXct( "2016-12-05 12:45:45" ) , tz = "BST" )
as.integer( as.POSIXct( "2016-12-05 12:45:45" ) , tz = "BST" ) * 1000
as.integer( as.POSIXct( "2016-12-05 12:45:45" ) , tz = "Europe/Copenhagen" ) * 1000
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
#ff <- select(fuf,6:8)
ff <- select(fuf,as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000)
ff
fuf
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
#ff <- select(fuf,6:8)
ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff
?apply
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
apply(fuf[,'timestamp'], 1, as.integer( as.POSIXct( as.Date(x) ) , tz = "Europe/Copenhagen" ) * 1000 )
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
runApp('simple_nvd3.R')
as.integer( as.POSIXct( as.Date(timestamp )) , tz = "Europe/Copenhagen" ) * 1000
as.integer( as.POSIXct( as.Date(timestamp ) , tz = "Europe/Copenhagen" ) * 1000
as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
as.integer( as.POSIXct(  ) , tz = "Europe/Copenhagen" ) * 1000
fuf
fuf[3]
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
pply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf <- apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
fuf
ff
fuf
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
select(fuf,timestamp)
typeof(fuf,timestamp)
typeof(fuf[timestamp])
typeof(fuf[3])
View(ff)
apply(fuf[3], 1, function(timestamp) as.integer( as.POSIXct( x ) , tz = "Europe/Copenhagen" ) * 1000 )
apply(x=fuf[3], 1, function(timestamp) as.integer( as.POSIXct( x ) , tz = "Europe/Copenhagen" ) * 1000 )
apply(x=fuf[3], 1, function(x) as.integer( as.POSIXct( x ) , tz = "Europe/Copenhagen" ) * 1000 )
apply(fuf[3], 1, function(fuf[3]) as.integer( as.POSIXct( fuf[3] ) , tz = "Europe/Copenhagen" ) * 1000 )
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
fuf
fuf[timestamp]
fuf['timestamp'']
fuf['timestamp']
fuf['timestamp']
apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
fuf['timestamp']
fuf
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
ff
runApp('simple_nvd3.R')
ecm
mtcars
"ecm"
ecm
runApp('simple_nvd3.R')
install.packages()
install.packages('ecm')
ecm
library('ggplot2')
ecm
library('dplyr')
library('shiny')
library('ggplot2')
library('ecm')
ecm
ecm()
ecm
ecm::durbinH()
uninstall('ecm')
detach("package:ecm", unload=TRUE)
ecm <- reshape2::melt(economics[,c('date', 'uempmed', 'psavert')], id = 'date')
ecm
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
ff
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
timestamp
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
ecm
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
ff
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 )
fuf['timestamp'] <- as.character(fuf['timestamp'])
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
fuf
ff
runApp('simple_nvd3.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.character(as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 ))
#fuf['timestamp'] <- as.character(fuf['timestamp'])
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
runApp('simple_nvd3.R')
ecm
?options
runApp('simple_nvd3.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.character(as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 ))
fuf[ldavg1] <- format(ldavg1,decimal.mark=",")
#fuf['timestamp'] <- as.character(fuf['timestamp'])
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
runApp('simple_nvd3.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.character(as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 ))
fuf[ldavg1] <- format(fuf[ldavg1],decimal.mark=",")
#fuf['timestamp'] <- as.character(fuf['timestamp'])
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
fuf
runApp('simple_nvd3.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.character(as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 ))
fuf['ldavg1'] <- format(fuf['ldavg1'],decimal.mark=",")
#fuf['timestamp'] <- as.character(fuf['timestamp'])
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.character(as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 ))
fuf['ldavg1'] <- format(fuf['ldavg1'],decimal.mark=".")
#fuf['timestamp'] <- as.character(fuf['timestamp'])
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
format(fuf['ldavg1'],decimal.mark=".")
format(as.decimal(fuf['ldavg1']),decimal.mark=".")
format(as.double(fuf['ldavg1']),decimal.mark=".")
format(as.numeric(fuf['ldavg1']),decimal.mark=".")
format(as.numeric(fuf['ldavg1']),decimal.mark=".")
format(as.numeric("0,34"),decimal.mark=".")
as.numeric(gsub(",", ".", gsub("\\.", "", fuf['ldavg1'])))
as.numeric(gsub(",", ".", gsub("\\.", "", "0,45")))
typeof(fuf['ldavg1'])
hatte  = typeof(fuf['ldavg1'])
hatte  = fuf['ldavg1']
hatte  = as.numeric(fuf['ldavg1'])
hatte  = as.numeric(fuf['ldavg1'])
gsub(",", ".", gsub("\\.", "", fuf['ldavg1']))
gsub(",", ".", gsub(".", "", fuf['ldavg1']))
runApp('simple_nvd3.R')
gsub(",", ".", gsub(".", "", fuf['ldavg1']))
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART | sed s/,/\./g", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.character(as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 ))
#fuf['ldavg1'] <- format(fuf['ldavg1'],decimal.mark=".")
# as.numeric(gsub(",", ".", gsub("\\.", "", fuf['ldavg1'])))
#fuf['timestamp'] <- as.character(fuf['timestamp'])
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
runApp('simple_nvd3.R')
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART | sed s/\,/\./g", intern =  TRUE)
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART | sed s/\\,/\\./g", intern =  TRUE)
f
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART | sed s/\\,/\\./g", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.character(as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 ))
#fuf['ldavg1'] <- format(fuf['ldavg1'],decimal.mark=".")
# as.numeric(gsub(",", ".", gsub("\\.", "", fuf['ldavg1'])))
#fuf['timestamp'] <- as.character(fuf['timestamp'])
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
f
fuf <- read.table(text=f,sep = ";")
fuf
hatte <- fuf[v6]
hatte <- fuf[V6]
hatte <- fuf[6]
runApp('simple_nvd3.R')
ff
hatte <- ff[6]
hatte <- ff[2]
hatte
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
hatte <- ff[3]
hatte <- ff[4]
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
fuf
f <- system("sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART | sed s/\\,/\\./g", intern =  TRUE)
fuf <- read.table(text=f,sep = ";")
names(fuf) <- c("hostname","interval","timestamp","runqsz","plistsz","ldavg1","ldavg5","ldavg15","blocked")
fuf['timestamp'] <- apply(fuf['timestamp'], 1, function(timestamp) as.character(as.integer( as.POSIXct( timestamp ) , tz = "Europe/Copenhagen" ) * 1000 ))
#fuf['ldavg1'] <- format(fuf['ldavg1'],decimal.mark=".")
# as.numeric(gsub(",", ".", gsub("\\.", "", fuf['ldavg1'])))
#fuf['timestamp'] <- as.character(fuf['timestamp'])
#ff <- select(fuf,as.integer( as.POSIXct( as.Date(timestamp) ) , tz = "Europe/Copenhagen" ) * 1000)
ff <- select(fuf,3,6:8)
ff
fuf
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
mtcars
mtcars['drat']
erdgfxv = mtcars['drat']
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
runApp('simple_nvd3.R')
require(rCharts)
fake  <- data.frame(date = seq(as.Date("1990-01-01"), as.Date("1991/01/01"), by = "day"))
fake$x  <- rnorm(nrow(fake))
str(fake)
fake$d  <- as.numeric(as.POSIXct(fake$date))
r <- Rickshaw$new()
r$layer(x ~ d, data = fake, type = "line")
r$show()
runApp('simple_nvd3.R')
r$show()
require(rCharts)
fake  <- data.frame(date = seq(as.Date("1990-01-01"), as.Date("1991/01/01"), by = "day"))
fake$x  <- rnorm(nrow(fake))
str(fake)
fake$d  <- as.numeric(as.POSIXct(fake$date))
r <- Rickshaw$new()
r$layer(x ~ d, data = fake, type = "line")
r$show()
runApp('simple_nvd3.R')
tagList(
# Include CSS/JS dependencies. Use "singleton" to make sure that even
# if multiple lineChartOutputs are used in the same page, we'll still
# only include these chunks once.
singleton(tags$head(
tags$script(src="d3/d3.v3.min.js"),
tags$script(src="nvd3/nv.d3.min.js"),
tags$link(rel="stylesheet", type="text/css", href="nvd3/nv.d3.min.css"),
tags$script(src="linechart-binding.js")
)),
div(id=inputId, class="nvd3-linechart", style=style,
tag("svg", list())
)
)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
source('~/shiny_projekter/shiny_sysstat/linechart.R')
runApp()
runApp()
