{
    "collab_server" : "",
    "contents" : "rm(list = ls())\nlibrary(shiny)\nlibrary(rCharts)\nlibrary(ggplot2)\n\n#data <- read.csv(\"https://raw.githubusercontent.com/kilimba/data/master/data2.csv\")\n#agegroup_mapping <- read.csv(\"https://raw.githubusercontent.com/kilimba/data/master/agegroup.csv\")\n#data <- merge(data,agegroup_mapping,by.x=\"agegrp\",by.y=\"agegroup\")\n\nui = pageWithSidebar(\n  headerPanel(\"Population\"),\n  \n  sidebarPanel(\n  ),\n  mainPanel(\n    #showOutput(\"myChart\", \"nvd3\"),\n    showOutput(\"d1Chart\", \"nvd3\")\n  )\n)\n\nserver = function(input, output) {\n  \n  f <- system(\"sadf -d -T /var/log/sysstat/sa10 -- -q | grep $(hostname) | grep 21 | grep -v RESTART\", intern =  TRUE)\n  fuf <- read.table(text=f,sep = \";\")\n  names(fuf) <- c(\"hostname\",\"interval\",\"timestamp\",\"runqsz\",\"plistsz\",\"ldavg1\",\"ldavg5\",\"ldavg15\",\"blocked\")\n  ff <- select(fuf,6:8)\n  ff\n  \n  output$d1Chart <- renderChart2({\n    \n    #example 48 timeAxis\n    data( economics, package = \"ggplot2\" )\n    economics$date = format(economics$date, \"%Y-%m-%d\")\n    d1 <- dPlot(\n      x = \"date\",\n      y = \"uempmed\",\n      data = economics,\n      type = \"line\",\n      height = 400,\n      width = 700,\n      bounds = list(x=50,y=20,width=650,height=300)\n    )\n    d1$xAxis(\n      type = \"addTimeAxis\",\n      inputFormat = \"%Y-%m-%d\",\n      outputFormat = \"%b %Y\"\n    )\n    d1\n    \n    #test out additional layer/series functionality\n    d1$layer(\n      x = \"date\",\n      y = \"psavert\",\n      data = NULL,\n      type = \"line\"\n    )\n    d1\n    \n    #plot$save(\"d1.html\")\n  })\n  \n  output$myChart <- renderChart2({\n    #selection <-  data[data$mapping == \"0-4\",]\n    #selection <- data[data$mapping == input$agegrp,]\n    selection <- ff\n    \n    #d3.timeParse(\"%Y-%m-%d %H:%M:%S\")\n    \n    #selection <- subset(data,mapping == input$agegrp)\n    \n    plot <- nPlot(ldavg15 ~ timestamp, \n                #group = 'variable', \n                data = fuf, \n                type = 'lineChart')\n    \n    plot$xAxis(\n      #type = \"addTimeAxis\",\n      #inputFormat = \"%Y-%m-%d %H:%M:%S\",\n      #inputFormat = \"#!function(d) {return d3.timeParse('%Y-%m-%d %H:%M:%S')(new Date( d * 86400000 ));}!#\",\n      axisLabel = 'Time'\n      #outputFormat = \"%H:%M:%S\",\n      #tickFormat=\"#!function(d) {return d3.time.format('%H:%M:%S')(new Date( d * 86400000 ));}!#\"\n    )\n     \n    #plot$xAxis( axisLabel = 'Time',tickFormat=\"#!function(d) {return d3.time.format('%H:%M:%S')(new Date( d * 86400000 ));}!#\" )\n    #try new interactive guidelines feature\n    plot$yAxis(axisLabel = \"Load avg.\")\n    #plot$xAxis(axisLabel = \"Time\")\n    plot$chart(useInteractiveGuideline=TRUE)\n    plot$print(include_assets=T)\n    \n    #plot <- nPlot(n ~ year,\n    #              data = selection,\n    #              type = \"lineChart\",\n    #              group = \"sex\")\n    ## Add axis labels and format the tooltip\n    #plot$yAxis(axisLabel = \"Load avg.\", width = 62)\n    #plot$xAxis(axisLabel = \"Time\")\n    plot$set(width=1200, height=900) #probably pixel size\n    \n    plot$save(\"ac.html\")\n    plot\n  })\n}\n\nshinyApp(ui = ui, server = server)",
    "created" : 1491834279135.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4032554257",
    "id" : "542BCC84",
    "lastKnownWriteTime" : 1491911085,
    "last_content_update" : 1491911085991,
    "path" : "~/shiny_projekter/shiny_sysstat/rCharter.R",
    "project_path" : "rCharter.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}